typeof SDK=="undefined"&&(SDK={__namespace:!0});SDK.REST={context:function(){if(typeof GetGlobalContext!="undefined")return GetGlobalContext();if(Xrm&&Xrm.Utility&&typeof Xrm.Utility.getGlobalContext!="undefined")return Xrm.Utility.getGlobalContext();if(typeof Xrm!="undefined")return Xrm.Page.context;throw new Error("Context is not available.");},getClientUrl:function(){return this.context().getClientUrl()},ODataPath:function(){return this.getClientUrl()+"/XRMServices/2011/OrganizationData.svc/"},_errorHandler:function(n){if(n.status==12029)return new Error("The attempt to connect to the server failed.");if(n.status==12007)return new Error("The server name could not be resolved.");var t;try{t=JSON.parse(n.responseText).error.message.value}catch(i){t=n.responseText}return new Error("Error : "+n.status+": "+n.statusText+": "+t)},_dateReviver:function(n,t){var i;return typeof t=="string"&&(i=/Date\(([-+]?\d+)\)/.exec(t),i)?new Date(parseInt(t.replace("/Date(","").replace(")/",""),10)):t},_parameterCheck:function(n,t){if(typeof n=="undefined"||n===null)throw new Error(t);},_stringParameterCheck:function(n,t){if(typeof n!="string")throw new Error(t);},_callbackParameterCheck:function(n,t){if(typeof n!="function")throw new Error(t);},createRecord:function(n,t,i,r){this._parameterCheck(n,"SDK.REST.createRecord requires the object parameter.");this._stringParameterCheck(t,"SDK.REST.createRecord requires the type parameter is a string.");this._callbackParameterCheck(i,"SDK.REST.createRecord requires the successCallback is a function.");this._callbackParameterCheck(r,"SDK.REST.createRecord requires the errorCallback is a function.");var u=new XMLHttpRequest;u.open("POST",encodeURI(this.ODataPath()+t+"Set"),!0);u.setRequestHeader("Accept","application/json");u.setRequestHeader("Content-Type","application/json; charset=utf-8");u.onreadystatechange=function(){this.readyState==4&&(u.onreadystatechange=null,this.status==201?i(JSON.parse(this.responseText,SDK.REST._dateReviver).d):r(SDK.REST._errorHandler(this)))};u.send(JSON.stringify(n))},retrieveRecord:function(n,t,i,r,u,f){var e,s,o;this._stringParameterCheck(n,"SDK.REST.retrieveRecord requires the id parameter is a string.");this._stringParameterCheck(t,"SDK.REST.retrieveRecord requires the type parameter is a string.");i!=null&&this._stringParameterCheck(i,"SDK.REST.retrieveRecord requires the select parameter is a string.");r!=null&&this._stringParameterCheck(r,"SDK.REST.retrieveRecord requires the expand parameter is a string.");this._callbackParameterCheck(u,"SDK.REST.retrieveRecord requires the successCallback parameter is a function.");this._callbackParameterCheck(f,"SDK.REST.retrieveRecord requires the errorCallback parameter is a function.");e="";(i!=null||r!=null)&&(e="?",i!=null&&(s="$select="+i,r!=null&&(s=s+","+r),e=e+s),r!=null&&(e=e+"&$expand="+r));o=new XMLHttpRequest;o.open("GET",encodeURI(this.ODataPath()+t+"Set(guid'"+n+"')"+e),!0);o.setRequestHeader("Accept","application/json");o.setRequestHeader("Content-Type","application/json; charset=utf-8");o.onreadystatechange=function(){this.readyState==4&&(o.onreadystatechange=null,this.status==200?u(JSON.parse(this.responseText,SDK.REST._dateReviver).d):f(SDK.REST._errorHandler(this)))};o.send()},updateRecord:function(n,t,i,r,u){this._stringParameterCheck(n,"SDK.REST.updateRecord requires the id parameter.");this._parameterCheck(t,"SDK.REST.updateRecord requires the object parameter.");this._stringParameterCheck(i,"SDK.REST.updateRecord requires the type parameter.");this._callbackParameterCheck(r,"SDK.REST.updateRecord requires the successCallback is a function.");this._callbackParameterCheck(u,"SDK.REST.updateRecord requires the errorCallback is a function.");var f=new XMLHttpRequest;f.open("POST",encodeURI(this.ODataPath()+i+"Set(guid'"+n+"')"),!0);f.setRequestHeader("Accept","application/json");f.setRequestHeader("Content-Type","application/json; charset=utf-8");f.setRequestHeader("X-HTTP-Method","MERGE");f.onreadystatechange=function(){this.readyState==4&&(f.onreadystatechange=null,this.status==204||this.status==1223?r():u(SDK.REST._errorHandler(this)))};f.send(JSON.stringify(t))},deleteRecord:function(n,t,i,r){this._stringParameterCheck(n,"SDK.REST.deleteRecord requires the id parameter.");this._stringParameterCheck(t,"SDK.REST.deleteRecord requires the type parameter.");this._callbackParameterCheck(i,"SDK.REST.deleteRecord requires the successCallback is a function.");this._callbackParameterCheck(r,"SDK.REST.deleteRecord requires the errorCallback is a function.");var u=new XMLHttpRequest;u.open("POST",encodeURI(this.ODataPath()+t+"Set(guid'"+n+"')"),!0);u.setRequestHeader("Accept","application/json");u.setRequestHeader("Content-Type","application/json; charset=utf-8");u.setRequestHeader("X-HTTP-Method","DELETE");u.onreadystatechange=function(){this.readyState==4&&(u.onreadystatechange=null,this.status==204||this.status==1223?i():r(SDK.REST._errorHandler(this)))};u.send()},retrieveMultipleRecords:function(n,t,i,r,u){var e,f;this._stringParameterCheck(n,"SDK.REST.retrieveMultipleRecords requires the type parameter is a string.");t!=null&&this._stringParameterCheck(t,"SDK.REST.retrieveMultipleRecords requires the options parameter is a string.");this._callbackParameterCheck(i,"SDK.REST.retrieveMultipleRecords requires the successCallback parameter is a function.");this._callbackParameterCheck(r,"SDK.REST.retrieveMultipleRecords requires the errorCallback parameter is a function.");this._callbackParameterCheck(u,"SDK.REST.retrieveMultipleRecords requires the OnComplete parameter is a function.");t!=null&&(e=t.charAt(0)!="?"?"?"+t:t);f=new XMLHttpRequest;f.open("GET",this.ODataPath()+n+"Set"+e,!0);f.setRequestHeader("Accept","application/json");f.setRequestHeader("Content-Type","application/json; charset=utf-8");f.onreadystatechange=function(){var t,e;this.readyState==4&&(f.onreadystatechange=null,this.status==200?(t=JSON.parse(this.responseText,SDK.REST._dateReviver).d,i(t.results),t.__next!=null?(e=t.__next.substring((SDK.REST.ODataPath()+n+"Set").length),SDK.REST.retrieveMultipleRecords(n,e,i,r,u)):u()):r(SDK.REST._errorHandler(this)))};f.send()},associateRecords:function(n,t,i,r,u,f,e){var o,s;this._stringParameterCheck(n,"SDK.REST.associateRecords requires the parentId parameter is a string.");this._stringParameterCheck(t,"SDK.REST.associateRecords requires the parentType parameter is a string.");this._stringParameterCheck(i,"SDK.REST.associateRecords requires the relationshipName parameter is a string.");this._stringParameterCheck(r,"SDK.REST.associateRecords requires the childId parameter is a string.");this._stringParameterCheck(u,"SDK.REST.associateRecords requires the childType parameter is a string.");this._callbackParameterCheck(f,"SDK.REST.associateRecords requires the successCallback parameter is a function.");this._callbackParameterCheck(e,"SDK.REST.associateRecords requires the errorCallback parameter is a function.");o=new XMLHttpRequest;o.open("POST",encodeURI(this.ODataPath()+t+"Set(guid'"+n+"')/$links/"+i),!0);o.setRequestHeader("Accept","application/json");o.setRequestHeader("Content-Type","application/json; charset=utf-8");o.onreadystatechange=function(){this.readyState==4&&(o.onreadystatechange=null,this.status==204||this.status==1223?f():e(SDK.REST._errorHandler(this)))};s={};s.uri=this.ODataPath()+"/"+u+"Set(guid'"+r+"')";o.send(JSON.stringify(s))},disassociateRecords:function(n,t,i,r,u,f){this._stringParameterCheck(n,"SDK.REST.disassociateRecords requires the parentId parameter is a string.");this._stringParameterCheck(t,"SDK.REST.disassociateRecords requires the parentType parameter is a string.");this._stringParameterCheck(i,"SDK.REST.disassociateRecords requires the relationshipName parameter is a string.");this._stringParameterCheck(r,"SDK.REST.disassociateRecords requires the childId parameter is a string.");this._callbackParameterCheck(u,"SDK.REST.disassociateRecords requires the successCallback parameter is a function.");this._callbackParameterCheck(f,"SDK.REST.disassociateRecords requires the errorCallback parameter is a function.");var e=new XMLHttpRequest;e.open("POST",encodeURI(this.ODataPath()+t+"Set(guid'"+n+"')/$links/"+i+"(guid'"+r+"')"),!0);e.setRequestHeader("Accept","application/json");e.setRequestHeader("Content-Type","application/json; charset=utf-8");e.setRequestHeader("X-HTTP-Method","DELETE");e.onreadystatechange=function(){this.readyState==4&&(e.onreadystatechange=null,this.status==204||this.status==1223?u():f(SDK.REST._errorHandler(this)))};e.send()},__namespace:!0};